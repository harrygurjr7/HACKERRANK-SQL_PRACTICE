"TABLE NAME 
CITY 
FIELD ID,NAME,COUNTARYCODE,DISTRICT,POPULATION
Type NUMBER VARCHAR(17),VARCHAR2(3),NUMBER "


Q1 :Query all columns for all American cities in CITY with populations larger than 100,000. The CountryCode for America is USA.

SOLUTION :
SELECT * FROM CITY WHERE COUNTRYCODE = 'USA' AND POPULATION > 100000;

Q2 : Query the names of all American cities in CITY with populations larger than 120,000. The CountryCode for America is USA.

SOLUTIONS:
SELECT NAME FROM CITY WHERE COUNTRYCODE = 'USA' AND POPULATION > 120000;

Q3 : Query all columns for every row in the CITY table.

SOLUTIONS : SELECT * FROM CITY;

Q4 : Query all columns for a city in CITY with the ID 1661.

SOLUTIONS : SELECT * FROM CITY WHERE ID = 1661; 

Q5 : Query the details for all the Japanese cities in CITY. The COUNTRYCODE for Japan is JPN.

SOLUTION : SELECT * FROM CITY WHERE COUNTRYCODE = 'JPN';   

Q6 : Query the the names of all the Japanese cities in CITY. The COUNTRYCODE for Japan is JPN

SOLLUTION : SELECT NAME FROM CITY WHERE COUNTRYCODE = 'JPN';  

Q7:
Query a list of CITY and STATE from the STATION table.
The STATION table is described as follows:


SOLUTION : SELECT CITY,STATE FROM STATION;

Q8:
Query a list of CITY names from STATION for cities that have an even ID number. 
Print the results in any order, but exclude duplicates from the answer.

SOLUTION : 
SELECT DISTINCT CITY FROM STATION
WHERE MOD(STATION.ID,2)= 0
ORDER BY CITY;

Q9 : Find the difference between the total number of CITY entries in 
the table and the number of distinct CITY entries in the tablE

Solution :SELECT COUNT(CITY)- COUNT(DISTINCT CITY) FROM STATION ;

Q 10 :Query the two cities in STATION with the shortest and longest CITY names,
as well as their respective lengths (i.e.: number of characters in the name). 
If there is more than one smallest or largest city, choose the one that comes first when ordered alphabetically.

Solution :
SELECT CITY,LENGTH(CITY) FROM STATION
ORDER BY LENGTH(CITY),CITY LIMIT 1;
SELECT CITY,LENGTH(CITY) FROM STATION
ORDER BY LENGTH(CITY) DESC,CITY LIMIT 1;

Q11: 
Query the list of CITY names starting with vowels (i.e., a, e, i, o, or u) from STATION.
Your result cannot contain duplicates.

SOLUTION:
SELECT DISTINCT CITY FROM STATION
WHERE REGEXP_LIKE(CITY,'^[AEIOU]');

Q12 : Query the list of CITY names ending with vowels (a, e, i, o, u) from STATION. Your result cannot contain duplicates.

solution: SELECT DISTINCT CITY FROM STATION WHERE 
REGEXP_LIKE(CITY,'[AEIOU]$');

Q13 :
Query the list of CITY names from STATION which have vowels (i.e., a, e, i, o, and u) as both their first and last characters. 
Your result cannot contain duplicates.

SOLUTIONS:
SELECT DISTINCT CITY FROM STATION
WHERE REGEXP_LIKE(CITY,'^[aeiou].*[aeiou]$');

Q14:Query the list of CITY names from STATION that do not start with vowels. 
Your result cannot contain duplicates.

SOLUTION:
select DISTINCT CITY from STATION where
NOT regexp_like(city,'^[aeiouAEIOU]');


Q15: Query the list of CITY names from STATION that either do not start with vowels or do not end with vowels. 
Your result cannot contain duplicates.

SOLUTION : SELECT DISTINCT CITY FROM STATION 
WHERE NOT REGEXP_LIKE(CITY,'^[AEIOU].*[AEIOU]$');

Q16: Query the list of CITY names from STATION that do not start with vowels and do not end with vowels.
Your result cannot contain duplicates.

SOLUTIONS : SELECT DISTINCT city FROM station 
WHERE city NOT RLIKE '^[aeiouAEIOU]'AND CITY NOT RLIKE '[AEIOUaeiou]$';


Q17 : Query the Name of any student in STUDENTS who scored higher than  Marks. 
Order your output by the last three characters of each name. 
If two or more students both have names ending in the same last three characters (i.e.: Bobby, Robby, etc.), 
secondary sort them by ascending ID.

SOLUTIONS: 
SELECT NAME FROM STUDENTS 
WHERE MARKS>75 
ORDER BY RIGHT(NAME,3),ID;

Q18 : Write a query that prints a list of employee names (i.e.: the name attribute)
from the Employee table in alphabetical order.

SOLUTION : SELECT NAME FROM EMPLOYEE 
ORDER BY NAME ASC;


Q19 : Write a query that prints a list of employee names (i.e.: the name attribute)
for employees in Employee having a salary greater than  per month who have been employees for less than  months.
Sort your result by ascending employee_id.

SOLUTION : SELECT NAME FROM EMPLOYEE
WHERE SALARY>2000 AND MONTHS<10
ORDER BY EMPLOYEE_ID ASC








